{"ast":null,"code":"var _jsxFileName = \"/Users/nemanjamijucic/Documents/React/Reader-app/reader-app/src/store/book-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookContext = /*#__PURE__*/React.createContext({\n  currReadingbooks: [],\n  readedBooks: [],\n  showModal: \"\",\n  idForModal: \"\",\n  error: \"\",\n  setBooksToLS: () => {},\n  addToReadedBooksList: () => {},\n  showModalHandler: () => {},\n  getIdForModal: () => {},\n  setErrorHandler: () => {}\n});\nexport const BookContextProvider = props => {\n  _s();\n\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [readedBooks, setReadedBooks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [idForModal, setIdForModal] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const addToReadingList = item => {\n    item.currentlyReading = true;\n    let readingBooks = [];\n\n    if (!localStorage.getItem(\"books\")) {\n      readingBooks.push(item);\n      localStorage.setItem(\"books\", JSON.stringify(readingBooks));\n    }\n\n    if (localStorage.getItem(\"books\") !== null) {\n      readingBooks = JSON.parse(localStorage.getItem(\"books\"));\n      setCurrentlyReading(readingBooks);\n      const found = readingBooks.some(book => book.title === item.title);\n\n      if (!found) {\n        readingBooks = [...readingBooks, item];\n        localStorage.setItem(\"books\", JSON.stringify(readingBooks));\n      }\n    }\n\n    setCurrentlyReading(readingBooks);\n  }; //function for readed books\n\n\n  const addToReadedBooksList = item => {\n    let readedBooksList = [];\n    item.readed = true;\n\n    if (!localStorage.getItem(\"readedBooks\")) {\n      readedBooksList.push(item);\n      localStorage.setItem(\"readedBooks\", JSON.stringify(readedBooksList));\n    }\n\n    if (localStorage.getItem(\"readedBooks\")) {\n      readedBooksList = JSON.parse(localStorage.getItem(\"readedBooks\"));\n      const found = readedBooksList.some(book => book.title === item.title);\n\n      if (!found) {\n        readedBooksList = [...readedBooksList, item];\n        localStorage.setItem(\"readedBooks\", JSON.stringify(readedBooksList));\n      }\n    }\n\n    setReadedBooks(readedBooksList); //deleteing from currently reading array in LS when clicked on readed book\n\n    if (currentlyReading) {\n      setCurrentlyReading(currentlyReading.filter(book => book.id !== item.id));\n      localStorage.setItem(\"books\", JSON.stringify(currentlyReading));\n    }\n  }; //function for showing modal with book info\n\n\n  const showModalHandler = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const getIdForModal = id => {\n    setIdForModal(id);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"books\")) {\n      setCurrentlyReading(JSON.parse(localStorage.getItem(\"books\")));\n    }\n\n    if (localStorage.getItem(\"readedBooks\")) {\n      setReadedBooks(JSON.parse(localStorage.getItem(\"readedBooks\")));\n    }\n  }, []); // //function for showing error\n  // const setErrorHandler = () => {\n  //   setError(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(BookContext.Provider, {\n    value: {\n      currReadingbooks: currentlyReading,\n      readedBooks: readedBooks,\n      showModal: showModal,\n      idForModal: idForModal,\n      error: error,\n      setBooksToLS: addToReadingList,\n      addToReadedBooksList: addToReadedBooksList,\n      showModalHandler: showModalHandler,\n      getIdForModal: getIdForModal,\n      setErrorHandler: setError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookContextProvider, \"ADqRC8XUbMJYDJ0ISGmrCUTWZdQ=\");\n\n_c = BookContextProvider;\nexport default BookContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","BookContext","createContext","currReadingbooks","readedBooks","showModal","idForModal","error","setBooksToLS","addToReadedBooksList","showModalHandler","getIdForModal","setErrorHandler","BookContextProvider","props","currentlyReading","setCurrentlyReading","setReadedBooks","setShowModal","setIdForModal","setError","addToReadingList","item","readingBooks","localStorage","getItem","push","setItem","JSON","stringify","parse","found","some","book","title","readedBooksList","readed","filter","id","prevState","children"],"sources":["/Users/nemanjamijucic/Documents/React/Reader-app/reader-app/src/store/book-context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst BookContext = React.createContext({\n  currReadingbooks: [],\n  readedBooks: [],\n  showModal: \"\",\n  idForModal: \"\",\n  error: \"\",\n  setBooksToLS: () => {},\n  addToReadedBooksList: () => {},\n  showModalHandler: () => {},\n  getIdForModal: () => {},\n  setErrorHandler: () => {},\n});\n\nexport const BookContextProvider = (props) => {\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [readedBooks, setReadedBooks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [idForModal, setIdForModal] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const addToReadingList = (item) => {\n    item.currentlyReading = true;\n\n    let readingBooks = [];\n    if (!localStorage.getItem(\"books\")) {\n      readingBooks.push(item);\n      localStorage.setItem(\"books\", JSON.stringify(readingBooks));\n    }\n\n    if (localStorage.getItem(\"books\") !== null) {\n      readingBooks = JSON.parse(localStorage.getItem(\"books\"));\n      setCurrentlyReading(readingBooks);\n      const found = readingBooks.some((book) => book.title === item.title);\n      if (!found) {\n        readingBooks = [...readingBooks, item];\n        localStorage.setItem(\"books\", JSON.stringify(readingBooks));\n      }\n    }\n    setCurrentlyReading(readingBooks);\n  };\n\n  //function for readed books\n  const addToReadedBooksList = (item) => {\n    let readedBooksList = [];\n    item.readed = true;\n    if (!localStorage.getItem(\"readedBooks\")) {\n      readedBooksList.push(item);\n      localStorage.setItem(\"readedBooks\", JSON.stringify(readedBooksList));\n    }\n\n    if (localStorage.getItem(\"readedBooks\")) {\n      readedBooksList = JSON.parse(localStorage.getItem(\"readedBooks\"));\n      const found = readedBooksList.some((book) => book.title === item.title);\n\n      if (!found) {\n        readedBooksList = [...readedBooksList, item];\n        localStorage.setItem(\"readedBooks\", JSON.stringify(readedBooksList));\n      }\n    }\n\n    setReadedBooks(readedBooksList);\n\n    //deleteing from currently reading array in LS when clicked on readed book\n    if (currentlyReading) {\n      setCurrentlyReading(\n        currentlyReading.filter((book) => book.id !== item.id)\n      );\n      localStorage.setItem(\"books\", JSON.stringify(currentlyReading));\n    }\n  };\n\n  //function for showing modal with book info\n  const showModalHandler = () => {\n    setShowModal((prevState) => !prevState);\n  };\n\n  const getIdForModal = (id) => {\n    setIdForModal(id);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"books\")) {\n      setCurrentlyReading(JSON.parse(localStorage.getItem(\"books\")));\n    }\n\n    if (localStorage.getItem(\"readedBooks\")) {\n      setReadedBooks(JSON.parse(localStorage.getItem(\"readedBooks\")));\n    }\n  }, []);\n\n  // //function for showing error\n  // const setErrorHandler = () => {\n  //   setError(true);\n  // };\n\n  return (\n    <BookContext.Provider\n      value={{\n        currReadingbooks: currentlyReading,\n        readedBooks: readedBooks,\n        showModal: showModal,\n        idForModal: idForModal,\n        error: error,\n        setBooksToLS: addToReadingList,\n        addToReadedBooksList: addToReadedBooksList,\n        showModalHandler: showModalHandler,\n        getIdForModal: getIdForModal,\n        setErrorHandler: setError,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EACtCC,gBAAgB,EAAE,EADoB;EAEtCC,WAAW,EAAE,EAFyB;EAGtCC,SAAS,EAAE,EAH2B;EAItCC,UAAU,EAAE,EAJ0B;EAKtCC,KAAK,EAAE,EAL+B;EAMtCC,YAAY,EAAE,MAAM,CAAE,CANgB;EAOtCC,oBAAoB,EAAE,MAAM,CAAE,CAPQ;EAQtCC,gBAAgB,EAAE,MAAM,CAAE,CARY;EAStCC,aAAa,EAAE,MAAM,CAAE,CATe;EAUtCC,eAAe,EAAE,MAAM,CAAE;AAVa,CAApB,CAApB;AAaA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACK,WAAD,EAAca,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,SAAD,EAAYa,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,UAAD,EAAaa,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACQ,KAAD,EAAQa,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAlC;;EAEA,MAAMsB,gBAAgB,GAAIC,IAAD,IAAU;IACjCA,IAAI,CAACP,gBAAL,GAAwB,IAAxB;IAEA,IAAIQ,YAAY,GAAG,EAAnB;;IACA,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;MAClCF,YAAY,CAACG,IAAb,CAAkBJ,IAAlB;MACAE,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAA9B;IACD;;IAED,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;MAC1CF,YAAY,GAAGK,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;MACAT,mBAAmB,CAACO,YAAD,CAAnB;MACA,MAAMQ,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeZ,IAAI,CAACY,KAAhD,CAAd;;MACA,IAAI,CAACH,KAAL,EAAY;QACVR,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBD,IAAlB,CAAf;QACAE,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAA9B;MACD;IACF;;IACDP,mBAAmB,CAACO,YAAD,CAAnB;EACD,CAnBD,CAP4C,CA4B5C;;;EACA,MAAMd,oBAAoB,GAAIa,IAAD,IAAU;IACrC,IAAIa,eAAe,GAAG,EAAtB;IACAb,IAAI,CAACc,MAAL,GAAc,IAAd;;IACA,IAAI,CAACZ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,EAA0C;MACxCU,eAAe,CAACT,IAAhB,CAAqBJ,IAArB;MACAE,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeM,eAAf,CAApC;IACD;;IAED,IAAIX,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;MACvCU,eAAe,GAAGP,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAlB;MACA,MAAMM,KAAK,GAAGI,eAAe,CAACH,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeZ,IAAI,CAACY,KAAnD,CAAd;;MAEA,IAAI,CAACH,KAAL,EAAY;QACVI,eAAe,GAAG,CAAC,GAAGA,eAAJ,EAAqBb,IAArB,CAAlB;QACAE,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeM,eAAf,CAApC;MACD;IACF;;IAEDlB,cAAc,CAACkB,eAAD,CAAd,CAlBqC,CAoBrC;;IACA,IAAIpB,gBAAJ,EAAsB;MACpBC,mBAAmB,CACjBD,gBAAgB,CAACsB,MAAjB,CAAyBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYhB,IAAI,CAACgB,EAAnD,CADiB,CAAnB;MAGAd,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAed,gBAAf,CAA9B;IACD;EACF,CA3BD,CA7B4C,CA0D5C;;;EACA,MAAML,gBAAgB,GAAG,MAAM;IAC7BQ,YAAY,CAAEqB,SAAD,IAAe,CAACA,SAAjB,CAAZ;EACD,CAFD;;EAIA,MAAM5B,aAAa,GAAI2B,EAAD,IAAQ;IAC5BnB,aAAa,CAACmB,EAAD,CAAb;EACD,CAFD;;EAIAtC,SAAS,CAAC,MAAM;IACd,IAAIwB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;MACjCT,mBAAmB,CAACY,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAD,CAAnB;IACD;;IAED,IAAID,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;MACvCR,cAAc,CAACW,IAAI,CAACE,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAD,CAAd;IACD;EACF,CARQ,EAQN,EARM,CAAT,CAnE4C,CA6E5C;EACA;EACA;EACA;;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLtB,gBAAgB,EAAEY,gBADb;MAELX,WAAW,EAAEA,WAFR;MAGLC,SAAS,EAAEA,SAHN;MAILC,UAAU,EAAEA,UAJP;MAKLC,KAAK,EAAEA,KALF;MAMLC,YAAY,EAAEa,gBANT;MAOLZ,oBAAoB,EAAEA,oBAPjB;MAQLC,gBAAgB,EAAEA,gBARb;MASLC,aAAa,EAAEA,aATV;MAULC,eAAe,EAAEQ;IAVZ,CADT;IAAA,UAcGN,KAAK,CAAC0B;EAdT;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CApGM;;GAAM3B,mB;;KAAAA,mB;AAsGb,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}